"""
Script for creating dataframes and processing data to generate statistics.

Author: Manon Tessier
Date: 2023-12-04

The create_files_to_exploit function takes as input 2 dataframes, one containing the data for watches in 2021 and the other the data for 2023. 
the other the data for 2023, and returns 4 dataframes corresponding to the mixture of 2021 and 2023 data, but this time distributed over the 
4 markets (FR, JAP, UK, USA)
The function goes through 4 steps: removal of incomplete data (missing price...), renaming of collections (the dash 
is missing or not depending on the country), concatenation of the 2 incoming dataframes, separation by country.
The function also involves writing data from the 4 markets into excel files for more accessible visualization.

Current limitations :
- writing excel files as it currently exists overwrites old files --> loss of old data
Possible points for improvement :
- lines new_prices['price] = ... generate warnings --> syntax to be changed 
- make file writing dynamic (create a specific folder for each run + file names that include the date)
"""

import pandas as pd

def create_files_to_exploit(old_prices, new_prices):
    #Write after reformatting prices and removing null values
    new_prices = new_prices.dropna(subset=['price'])
    new_prices['price'] = new_prices["price"].replace(r"\D+", "", regex=True)
    new_prices['price'] = new_prices["price"].astype(float)
    
    #Renaming collections to be in harmony
    new_prices['collection'] = new_prices['collection'].replace("LUMINOR DUE","LUMINOR-DUE")

    #concatenate old and new products and separate them by country
    to_compare_df = pd.concat([old_prices, new_prices])
    to_compare_df = to_compare_df.loc[:, ~to_compare_df.columns.str.match("Unnamed")]

    fr_market = to_compare_df.loc[to_compare_df['country'] == 'France']
    jap_market = to_compare_df.loc[to_compare_df['country'] == 'Japan']
    uk_market = to_compare_df.loc[to_compare_df['country'] == 'UK']
    us_market = to_compare_df.loc[to_compare_df['country'] == 'USA']

    #write each data set in excel files just in case
    fr_market.to_excel('excel_files/fr_market_data.xlsx')
    jap_market.to_excel('excel_files/jap_market_data.xlsx')
    uk_market.to_excel('excel_files/uk_market_data.xlsx')
    us_market.to_excel('excel_files/us_market_data.xlsx')

    return fr_market, jap_market, uk_market, us_market
