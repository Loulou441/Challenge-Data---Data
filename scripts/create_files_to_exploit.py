"""
Script de création des dataframes avec traitement des données pour pouvoir générer des statistiques.

Auteur: Manon Tessier
Date: 2023-12-04

La fonction create_files_to_exploit prend en entrée 2 dataframes, l'un contenant les données des montres en 2021 et 
l'autre les données de 2023 et renvoit 4 dataframes correspondant au mélange 2021 et 2023 des données mais cette fois-ci répartie 
sur les 4 marchés (FR, JAP, UK, USA)
La fonction passe par 4 étapes : enlèvement des données incomplètes (prix manquant...), renommage des collections (le tiret 
est manquant ou non en fonction des pays), concaténation les 2 dataframes entrants, séparation par pays.
La fonction passe aussi par l'écriture des données des 4 marchés dans des fichiers excel pour une visualisation plus accessible.

Limitations actuelles :
- l'écriture des fichiers excel telle qu'elle existe actuellement écrase les anciens fichiers --> perte des anciennes données
Points d'amélioration possibles :
- les lignes new_prices['price] = ... génèrent des warnings --> syntaxe à changer 
- rendre dynamique l'écriture des fichiers (création d'un dossier spécifique à chaque exécution + nom des fichiers qui incluent la date)
"""

import pandas as pd

def create_files_to_exploit(old_prices, new_prices):
    #Ecriture après reformattage des prix et enlèvement des valeurs nulles
    new_prices = new_prices.dropna(subset=['price'])
    new_prices['price'] = new_prices["price"].replace(r"\D+", "", regex=True)
    new_prices['price'] = new_prices["price"].astype(float)
    
    #Renommage des collections pour être en harmonie
    new_prices['collection'] = new_prices['collection'].replace("LUMINOR DUE","LUMINOR-DUE")

    #concatenate old and new products and separate them by country
    to_compare_df = pd.concat([old_prices, new_prices])
    to_compare_df = to_compare_df.loc[:, ~to_compare_df.columns.str.match("Unnamed")]

    fr_market = to_compare_df.loc[to_compare_df['country'] == 'France']
    jap_market = to_compare_df.loc[to_compare_df['country'] == 'Japan']
    uk_market = to_compare_df.loc[to_compare_df['country'] == 'UK']
    us_market = to_compare_df.loc[to_compare_df['country'] == 'USA']

    #write each data set in excel files just in case

    fr_market.to_excel('excel_files/fr_market_data.xlsx')
    jap_market.to_excel('excel_files/jap_market_data.xlsx')
    uk_market.to_excel('excel_files/uk_market_data.xlsx')
    us_market.to_excel('excel_files/us_market_data.xlsx')

    return fr_market, jap_market, uk_market, us_market
